@model RezervasyonSistemi.Controllers.RezervasyonViewModel
@{
    Layout = null;
    var statusQ = (string)ViewBag.SelectedStatus;
    var showPast = (bool)(ViewBag.ShowPast ?? true);
    var currentUser = ViewBag.CurrentUser as RezervasyonSistemi.Models.User;
    
    // Rezervasyonları filtrele
    var filtered = Model.Reservations.AsEnumerable();
    
    // Durum filtreleme
    if (!string.IsNullOrEmpty(statusQ)) 
    {
        filtered = filtered.Where(r => (r.Durum ?? "").Trim().ToLowerInvariant() == statusQ.ToLowerInvariant());
    }
    
    // Zaman filtreleme - sadece "Gelecek Rezervasyonlar" seçildiğinde aktif
    if (!showPast) 
    {
        var todayUtc = DateTime.UtcNow.Date;
        filtered = filtered.Where(r => r.Tarih >= todayUtc);
    }
    
    var filteredList = filtered.ToList();
    var total = filteredList.Count;
    var confirmed = filteredList.Count(r => (r.Durum ?? "").Trim().ToLowerInvariant() == "onaylandı");
    var pending = filteredList.Count(r => (r.Durum ?? "").Trim().ToLowerInvariant() == "bekliyor");
    var rejected = filteredList.Count(r => (r.Durum ?? "").Trim().ToLowerInvariant() == "iptal");
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Rezervasyonlarım - RezerveHub</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        .container {
            padding-top: 2rem;
            padding-bottom: 2rem;
        }
        
        /* Yeni Header Stilleri */
        .user-header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 1.5rem;
            margin-bottom: 2rem;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }
        
        .user-profile {
            display: flex;
            align-items: center;
            gap: 1.5rem;
        }
        
        .user-avatar {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            object-fit: cover;
            border: 4px solid #667eea;
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 2rem;
            font-weight: bold;
        }
        
        .user-info {
            flex: 1;
        }
        
        .user-name {
            font-size: 1.8rem;
            font-weight: 700;
            color: #2c3e50;
            margin-bottom: 0.5rem;
        }
        
        .user-email {
            color: #7f8c8d;
            font-size: 1rem;
            margin-bottom: 0.5rem;
        }
        
        .user-stats {
            display: flex;
            gap: 2rem;
            margin-top: 1rem;
        }
        
        .stat-item {
            text-align: center;
        }
        
        .stat-number {
            font-size: 1.5rem;
            font-weight: bold;
            color: #667eea;
        }
        
        .stat-label {
            font-size: 0.85rem;
            color: #7f8c8d;
            margin-top: 0.25rem;
        }
        
        .profile-upload {
            position: relative;
            cursor: pointer;
        }
        
        .profile-upload input[type="file"] {
            position: absolute;
            opacity: 0;
            width: 100%;
            height: 100%;
            cursor: pointer;
        }
        
        .upload-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.5);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            opacity: 0;
            transition: opacity 0.3s ease;
        }
        
        .profile-upload:hover .upload-overlay {
            opacity: 1;
        }
        
        .upload-icon {
            color: white;
            font-size: 1.2rem;
        }
        
        .card {
            border: none;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            backdrop-filter: blur(10px);
            background: rgba(255,255,255,0.95);
        }
        
        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            border-radius: 25px;
            padding: 10px 25px;
            font-weight: 600;
            transition: all 0.3s ease;
        }
        
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        }
        
        .status-badge {
            padding: 8px 16px;
            border-radius: 20px;
            font-weight: 600;
            font-size: 0.85rem;
        }
        
        .status-onaylandi {
            background: linear-gradient(135deg, #4CAF50, #45a049);
            color: white;
        }
        
        .status-bekliyor {
            background: linear-gradient(135deg, #FF9800, #F57C00);
            color: white;
        }
        
        .status-iptal {
            background: linear-gradient(135deg, #f44336, #d32f2f);
            color: white;
        }
        
        .filter-section {
            background: rgba(255,255,255,0.9);
            border-radius: 15px;
            padding: 1.5rem;
            margin-bottom: 2rem;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        
        .form-control, .form-select {
            border-radius: 10px;
            border: 2px solid #e9ecef;
            padding: 12px 15px;
            transition: all 0.3s ease;
        }
        
        .form-control:focus, .form-select:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        }
        
        .reservation-card {
            border: none;
            border-radius: 15px;
            margin-bottom: 1rem;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
        }
        
        .reservation-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0,0,0,0.15);
        }
        
        .stats-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 15px;
            padding: 1.5rem;
            margin-bottom: 2rem;
        }
        
        .stats-number {
            font-size: 2rem;
            font-weight: bold;
            margin-bottom: 0.5rem;
        }
        
        .stats-label {
            font-size: 0.9rem;
            opacity: 0.9;
        }
        
        media (max-width: 768px) {
            .container {
                padding-top: 1rem;
                padding-bottom: 1rem;
            }
            
            .user-profile {
                flex-direction: column;
                text-align: center;
                gap: 1rem;
            }
            
            .user-avatar {
                width: 60px;
                height: 60px;
                font-size: 1.5rem;
            }
            
            .user-name {
                font-size: 1.5rem;
            }
            
            .user-stats {
                justify-content: center;
                gap: 1rem;
            }
            
            .stats-card {
                margin-bottom: 1rem;
            }
        }

        /* Account Deletion Modal Styles */
        .deletion-step {
            transition: all 0.3s ease;
        }

        .warning-icon, .success-icon, .final-warning-icon {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto;
            background: rgba(220, 53, 69, 0.1);
            border: 3px solid #dc3545;
        }

        .success-icon {
            background: rgba(13, 110, 253, 0.1);
            border-color: #0d6efd;
        }

        .final-warning-icon {
            background: rgba(220, 53, 69, 0.2);
            border-color: #dc3545;
            animation: pulse 2s infinite;
        }

        keyframes pulse {
            0% {
                transform: scale(1);
                box-shadow: 0 0 0 0 rgba(220, 53, 69, 0.7);
            }
            70% {
                transform: scale(1.05);
                box-shadow: 0 0 0 10px rgba(220, 53, 69, 0);
            }
            100% {
                transform: scale(1);
                box-shadow: 0 0 0 0 rgba(220, 53, 69, 0);
            }
        }

        .modal-content {
            border: none;
            border-radius: 15px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
        }

        .modal-header {
            border-radius: 15px 15px 0 0;
            border-bottom: none;
        }

        .form-control-lg {
            border-radius: 10px;
            border: 2px solid #e9ecef;
            transition: all 0.3s ease;
        }

        .form-control-lg:focus {
            border-color: #0d6efd;
            box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);
        }

        .btn-lg {
            border-radius: 10px;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .btn-lg:hover {
            transform: translateY(-2px);
        }
    </style>
</head>
<body>
    <div class="container">
        @Html.AntiForgeryToken()
        <!-- Yeni Kullanıcı Header -->
        <div class="user-header">
            <div class="d-flex justify-content-between align-items-start">
                <div class="user-profile">
                    <div class="profile-upload">
                        @if (!string.IsNullOrEmpty(currentUser?.ProfilResmiUrl))
                        {
                            <img src="@currentUser.ProfilResmiUrl" alt="Profil Resmi" class="user-avatar" id="userAvatar">
                        }
                        else
                        {
                            <div class="user-avatar" id="userAvatar">
                                @(currentUser?.Ad?.Substring(0, 1).ToUpper() ?? "U")
                            </div>
                        }
                        <div class="upload-overlay">
                            <i class="fas fa-camera upload-icon"></i>
                        </div>
                        <input type="file" id="profileImageInput" accept="image/*" style="display: none;">
                    </div>
                    
                    <div class="user-info">
                        <div class="user-name">
                            @(currentUser?.Ad ?? "Kullanıcı") @(currentUser?.Soyad ?? "")
                        </div>
                        <div class="user-email">
                            <i class="fas fa-envelope me-2"></i>
                            @(currentUser?.Email ?? "")
                        </div>
                        <div class="user-stats">
                            <div class="stat-item">
                                <div class="stat-number">@total</div>
                                <div class="stat-label">Toplam</div>
                            </div>
                            <div class="stat-item">
                                <div class="stat-number">@confirmed</div>
                                <div class="stat-label">Onaylanan</div>
                            </div>
                            <div class="stat-item">
                                <div class="stat-number">@pending</div>
                                <div class="stat-label">Bekleyen</div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Çıkış ve Hesap Silme Butonları -->
                <div class="d-flex gap-2">
                    <form method="post" action="@Url.Action("Logout", "Rezervasyon")" style="display: inline;">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-warning">
                            <i class="fas fa-sign-out-alt me-2"></i>Çıkış Yap
                        </button>
                    </form>
                    <button class="btn btn-danger" onclick="showDeleteAccountModal()">
                        <i class="fas fa-user-times me-2"></i>Hesabımı Sil
                    </button>
                </div>
            </div>
        </div>



        <!-- Filtreler -->
        <div class="filter-section">
            <form method="get" class="row g-3">
                <div class="col-md-4">
                    <label for="status" class="form-label">Durum</label>
                    <select name="status" id="status" class="form-select">
                        <option value="">Tüm Durumlar</option>
                        @if (statusQ == "onaylandı")
                        {
                            <option value="onaylandı" selected>Onaylandı</option>
                        }
                        else
                        {
                            <option value="onaylandı">Onaylandı</option>
                        }
                        @if (statusQ == "bekliyor")
                        {
                            <option value="bekliyor" selected>Bekliyor</option>
                        }
                        else
                        {
                            <option value="bekliyor">Bekliyor</option>
                        }
                        @if (statusQ == "iptal")
                        {
                            <option value="iptal" selected>İptal</option>
                        }
                        else
                        {
                            <option value="iptal">İptal</option>
                        }
                    </select>
                </div>
                <div class="col-md-4">
                    <label for="showPast" class="form-label">Zaman</label>
                    <select name="showPast" id="showPast" class="form-select">
                        @if (!showPast)
                        {
                            <option value="false" selected>Gelecek</option>
                        }
                        else
                        {
                            <option value="false">Gelecek</option>
                        }
                        @if (showPast)
                        {
                            <option value="true" selected>Tümü</option>
                        }
                        else
                        {
                            <option value="true">Tümü</option>
                        }
                    </select>
                </div>
                <div class="col-md-4 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary w-100">
                        <i class="fas fa-filter me-1"></i> Filtrele
                    </button>
                </div>
            </form>
        </div>

        <!-- Yeni Rezervasyon Butonu -->
        <div class="text-end mb-4">
            <a href="@Url.Action("Create", "Rezervasyon")" class="btn btn-primary">
                <i class="fas fa-plus me-2"></i>Yeni Rezervasyon Al
            </a>
        </div>

        <!-- Rezervasyon Listesi -->
        @if (filteredList.Any())
        {
            <div class="row">
                @foreach (var reservation in filteredList.OrderBy(r => r.Tarih))
                {
                    var business = Model.Businesses.FirstOrDefault(b => b.Id == reservation.IsletmeId);
                    var statusClass = (reservation.Durum ?? "").Trim().ToLowerInvariant() switch
                    {
                        "onaylandı" => "status-onaylandi",
                        "bekliyor" => "status-bekliyor",
                        "iptal" => "status-iptal",
                        _ => "status-bekliyor"
                    };
                    
                    <div class="col-lg-6 col-md-12 mb-3">
                        <div class="card reservation-card">
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-start mb-3">
                                    <h5 class="card-title mb-0">
                                        <i class="fas fa-building me-2"></i>
                                        @(business?.Ad ?? "Bilinmeyen İşletme")
                                    </h5>
                                    <span class="status-badge @statusClass">
                                        @(reservation.Durum ?? "Bekliyor")
                                    </span>
                                </div>
                                
                                <div class="row mb-3">
                                    <div class="col-6">
                                        <small class="text-muted">Tarih</small>
                                        <div class="fw-bold">
                                            <i class="fas fa-calendar me-1"></i>
                                            @reservation.Tarih.ToString("dd.MM.yyyy")
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <small class="text-muted">Saat</small>
                                        <div class="fw-bold">
                                            <i class="fas fa-clock me-1"></i>
                                            @reservation.Saat
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="row mb-3">
                                    <div class="col-6">
                                        <small class="text-muted">Hizmet</small>
                                        <div class="fw-bold">
                                            <i class="fas fa-concierge-bell me-1"></i>
                                            @reservation.HizmetAd
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <small class="text-muted">Süre</small>
                                        <div class="fw-bold">
                                            <i class="fas fa-hourglass-half me-1"></i>
                                            @reservation.HizmetSuresi
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="row mb-3">
                                    <div class="col-6">
                                        <small class="text-muted">Konum</small>
                                        <div class="fw-bold">
                                            <i class="fas fa-map-marker-alt me-1"></i>
                                            @(business?.Il ?? "") / @(business?.Ilce ?? "")
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <small class="text-muted">Telefon</small>
                                        <div class="fw-bold">
                                            <i class="fas fa-phone me-1"></i>
                                            @(business?.Telefon ?? "")
                                        </div>
                                    </div>
                                </div>
                                
                                @if (!string.IsNullOrEmpty(reservation.Notlar))
                                {
                                    <div class="mb-3">
                                        <small class="text-muted">Notlar</small>
                                        <div class="fw-bold">
                                            <i class="fas fa-sticky-note me-1"></i>
                                            @reservation.Notlar
                                        </div>
                                    </div>
                                }
                                
                                <div class="text-end">
                                    <button class="btn btn-danger btn-sm" onclick="deleteReservation('@reservation.Id', '@reservation.MusteriAdSoyad')">
                                        <i class="fas fa-times me-1"></i>Rezervasyon İptal
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="card">
                <div class="card-body text-center py-5">
                    <i class="fas fa-calendar-times fa-3x text-muted mb-3"></i>
                    <h4 class="text-muted">Rezervasyon Bulunamadı</h4>
                    <p class="text-muted">Seçilen kriterlere uygun rezervasyon bulunmuyor.</p>
                    <a href="@Url.Action("Create", "Rezervasyon")" class="btn btn-primary">
                        <i class="fas fa-plus me-2"></i>Yeni Rezervasyon Al
                    </a>
                </div>
            </div>
        }
    </div>

    <!-- Account Deletion Modal -->
    <div class="modal fade" id="deleteAccountModal" tabindex="-1" aria-labelledby="deleteAccountModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="deleteAccountModalLabel">
                        <i class="fas fa-exclamation-triangle me-2"></i>Hesap Silme
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="step1" class="deletion-step">
                        <div class="text-center mb-4">
                            <div class="warning-icon mb-3">
                                <i class="fas fa-user-times fa-3x text-danger"></i>
                            </div>
                            <h4 class="text-danger">Hesabınızı Silmek İstiyor musunuz?</h4>
                            <p class="text-muted">Bu işlem geri alınamaz ve tüm verileriniz kalıcı olarak silinecektir.</p>
                        </div>
                        
                        <div class="alert alert-warning">
                            <h6><i class="fas fa-exclamation-triangle me-2"></i>Dikkat!</h6>
                            <ul class="mb-0">
                                <li>Tüm rezervasyonlarınız silinecek</li>
                                <li>Profil bilgileriniz kalıcı olarak silinecek</li>
                                <li>Bu işlem geri alınamaz</li>
                            </ul>
                        </div>
                        
                        <div class="form-check mb-3">
                            <input class="form-check-input" type="checkbox" id="confirmDeletion">
                            <label class="form-check-label" for="confirmDeletion">
                                Hesabımı silmek istediğimi anlıyorum ve bu işlemin geri alınamaz olduğunu kabul ediyorum
                            </label>
                        </div>
                        
                        <div class="d-grid gap-2">
                            <button type="button" class="btn btn-danger" onclick="requestDeletion()" id="requestDeletionBtn" disabled>
                                <i class="fas fa-paper-plane me-2"></i>Doğrulama Kodu Gönder
                            </button>
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                                <i class="fas fa-times me-2"></i>İptal
                            </button>
                        </div>
                    </div>
                    
                    <div id="step2" class="deletion-step" style="display: none;">
                        <div class="text-center mb-4">
                            <div class="success-icon mb-3">
                                <i class="fas fa-envelope fa-3x text-primary"></i>
                            </div>
                            <h4 class="text-primary">Doğrulama Kodu Gönderildi</h4>
                            <p class="text-muted">E-posta adresinize 6 haneli doğrulama kodu gönderildi.</p>
                        </div>
                        
                        <div class="mb-3">
                            <label for="verificationCode" class="form-label">Doğrulama Kodu</label>
                            <input type="text" class="form-control form-control-lg text-center" id="verificationCode" 
                                   maxlength="6" placeholder="000000" style="letter-spacing: 0.5em; font-size: 1.2rem;">
                        </div>
                        
                        <div class="d-grid gap-2">
                            <button type="button" class="btn btn-primary" onclick="verifyDeletion()" id="verifyDeletionBtn">
                                <i class="fas fa-check me-2"></i>Doğrula
                            </button>
                            <button type="button" class="btn btn-secondary" onclick="backToStep1()">
                                <i class="fas fa-arrow-left me-2"></i>Geri
                            </button>
                        </div>
                    </div>
                    
                    <div id="step3" class="deletion-step" style="display: none;">
                        <div class="text-center mb-4">
                            <div class="final-warning-icon mb-3">
                                <i class="fas fa-exclamation-triangle fa-3x text-danger"></i>
                            </div>
                            <h4 class="text-danger">Son Uyarı!</h4>
                            <p class="text-muted">Doğrulama başarılı. Hesabınızı kalıcı olarak silmek üzeresiniz.</p>
                        </div>
                        
                        <div class="alert alert-danger">
                            <h6><i class="fas fa-skull-crossbones me-2"></i>Bu İşlem Geri Alınamaz!</h6>
                            <p class="mb-0">Tüm verileriniz ve rezervasyonlarınız kalıcı olarak silinecektir.</p>
                        </div>
                        
                        <div class="d-grid gap-2">
                            <button type="button" class="btn btn-danger btn-lg" onclick="confirmDeletion()" id="confirmDeletionBtn">
                                <i class="fas fa-trash me-2"></i>Hesabımı Kalıcı Olarak Sil
                            </button>
                            <button type="button" class="btn btn-secondary" onclick="backToStep1()">
                                <i class="fas fa-times me-2"></i>İptal Et
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        // Geri/ileri tuşlarıyla erişimi engelle
        window.history.pushState(null, null, window.location.href);
        window.onpopstate = function () {
            window.history.pushState(null, null, window.location.href);
            // Kullanıcıyı uyar
            alert('Geri/ileri tuşları kullanılamaz. Lütfen menüden navigasyon yapın.');
        };

        // Sayfa yüklendiğinde history'yi temizle
        window.addEventListener('load', function() {
            // Sayfa yüklendiğinde history'yi temizle
            if (window.history && window.history.pushState) {
                window.history.pushState(null, null, window.location.href);
            }
        });

        // Çıkış butonunu düzelt
        document.addEventListener('DOMContentLoaded', function() {
            const logoutForm = document.querySelector('form[action*="Logout"]');
            if (logoutForm) {
                logoutForm.addEventListener('submit', function(e) {
                    e.preventDefault();
                    if (confirm('Çıkış yapmak istediğinizden emin misiniz?')) {
                        this.submit();
                    }
                });
            }
        });
        // Profil resmi yükleme
        document.getElementById('profileImageInput').addEventListener('change', function(e) {
            const file = e.target.files[0];
            if (file) {
                const formData = new FormData();
                formData.append('profilResmi', file);
                
                // CSRF token al
                const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
                formData.append('__RequestVerificationToken', token);
                
                fetch('/Rezervasyon/ProfilResmiYukle', {
                    method: 'POST',
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Avatar'ı güncelle
                        const avatar = document.getElementById('userAvatar');
                        if (avatar.tagName === 'IMG') {
                            avatar.src = data.url;
                        } else {
                            // Eğer div ise, img elementine çevir
                            const newAvatar = document.createElement('img');
                            newAvatar.src = data.url;
                            newAvatar.alt = 'Profil Resmi';
                            newAvatar.className = 'user-avatar';
                            newAvatar.id = 'userAvatar';
                            avatar.parentNode.replaceChild(newAvatar, avatar);
                        }
                        alert('Profil resmi başarıyla güncellendi!');
                    } else {
                        alert('Hata: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Bir hata oluştu. Lütfen tekrar deneyin.');
                });
            }
        });
        
        // Profil resmi tıklama olayı
        document.querySelector('.profile-upload').addEventListener('click', function() {
            document.getElementById('profileImageInput').click();
        });

        // Account Deletion Functions
        function showDeleteAccountModal() {
            const modal = new bootstrap.Modal(document.getElementById('deleteAccountModal'));
            modal.show();
            
            // Reset modal state
            document.getElementById('confirmDeletion').checked = false;
            document.getElementById('requestDeletionBtn').disabled = true;
            document.getElementById('verificationCode').value = '';
            
            // Show step 1
            showStep(1);
        }

        function showStep(stepNumber) {
            // Hide all steps
            document.querySelectorAll('.deletion-step').forEach(step => {
                step.style.display = 'none';
            });
            
            // Show the specified step
            document.getElementById(`step${stepNumber}`).style.display = 'block';
        }

        // Checkbox change event
        document.getElementById('confirmDeletion').addEventListener('change', function() {
            document.getElementById('requestDeletionBtn').disabled = !this.checked;
        });

        // Verification code input formatting
        document.getElementById('verificationCode').addEventListener('input', function() {
            this.value = this.value.replace(/[^0-9]/g, '').substring(0, 6);
        });

        function requestDeletion() {
            const email = '@(currentUser?.Email ?? "")';
            const userType = 'user';
            
            fetch('/AccountDeletion/RequestDeletion', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ email: email, userType: userType })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showStep(2);
                } else {
                    alert('Hata: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Bir hata oluştu. Lütfen tekrar deneyin.');
            });
        }

        function verifyDeletion() {
            const email = '@(currentUser?.Email ?? "")';
            const verificationCode = document.getElementById('verificationCode').value;
            
            if (verificationCode.length !== 6) {
                alert('Lütfen 6 haneli doğrulama kodunu girin.');
                return;
            }
            
            fetch('/AccountDeletion/VerifyDeletion', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ email: email, verificationCode: verificationCode })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showStep(3);
                } else {
                    alert('Hata: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Bir hata oluştu. Lütfen tekrar deneyin.');
            });
        }

        function confirmDeletion() {
            const email = '@(currentUser?.Email ?? "")';
            
            if (confirm('Hesabınızı kalıcı olarak silmek istediğinizden emin misiniz? Bu işlem geri alınamaz!')) {
                fetch('/AccountDeletion/ConfirmDeletion', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ email: email })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Hesabınız başarıyla silindi.');
                        if (data.redirectUrl) {
                            window.location.href = data.redirectUrl;
                        }
                    } else {
                        alert('Hata: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Bir hata oluştu. Lütfen tekrar deneyin.');
                });
            }
        }

        function backToStep1() {
            showStep(1);
            document.getElementById('verificationCode').value = '';
        }


        function deleteReservation(reservationId, customerName) {
            if (confirm(`"${customerName}" adına yapılan rezervasyonu silmek istediğinizden emin misiniz?`)) {
                // CSRF token al
                const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
                
                fetch('/Rezervasyon/Delete', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'RequestVerificationToken': token
                    },
                    body: 'rezervasyonId=' + encodeURIComponent(reservationId) + '&__RequestVerificationToken=' + encodeURIComponent(token)
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Rezervasyon başarıyla silindi.');
                        location.reload();
                    } else {
                        alert('Hata: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Bir hata oluştu. Lütfen tekrar deneyin.');
                });
            }
        }
    </script>
</body>
</html>